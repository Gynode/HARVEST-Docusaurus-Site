"use strict";(self.webpackChunkharvest_website=self.webpackChunkharvest_website||[]).push([[701],{6772:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"HARVEST_ Technical Documentation","title":"HARVEST Blockchain Technical Documentation","description":"1. Introduction","source":"@site/docs/HARVEST_ Technical Documentation.md","sourceDirName":".","slug":"/HARVEST_ Technical Documentation","permalink":"/HARVEST-Docusaurus-Site/docs/HARVEST_ Technical Documentation","draft":false,"unlisted":false,"editUrl":"https://github.com/Gynode/HARVEST-Docusaurus-Site/tree/main/docs/HARVEST_ Technical Documentation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"harvestSidebar","previous":{"title":"HARVEST Blockchain: Deployment and Operations Manual for Proof-of-Authority","permalink":"/HARVEST-Docusaurus-Site/docs/HARVEST_ Deployment_Guide"}}');var t=i(4848),r=i(8453);const o={},a="HARVEST Blockchain Technical Documentation",l={},c=[{value:"1. Introduction",id:"1-introduction",level:2},{value:"2. Architecture Overview",id:"2-architecture-overview",level:2},{value:"2.1. Core Components",id:"21-core-components",level:3},{value:"2.2. Proof-of-Authority (PoA) Consensus",id:"22-proof-of-authority-poa-consensus",level:3},{value:"2.3. Node Handler Specifications",id:"23-node-handler-specifications",level:3},{value:"3. Development Roadmap and Implementation Plan",id:"3-development-roadmap-and-implementation-plan",level:2},{value:"3.1. Phase 1: Core Blockchain Development",id:"31-phase-1-core-blockchain-development",level:3},{value:"3.2. Phase 2: Smart Contract Development",id:"32-phase-2-smart-contract-development",level:3},{value:"3.3. Phase 3: Supporting Tools and Utilities",id:"33-phase-3-supporting-tools-and-utilities",level:3},{value:"3.4. Phase 4: Testing and Auditing",id:"34-phase-4-testing-and-auditing",level:3},{value:"3.5. Phase 5: Documentation and User Guides",id:"35-phase-5-documentation-and-user-guides",level:3},{value:"3.6. Phase 6: Deployment and Launch",id:"36-phase-6-deployment-and-launch",level:3},{value:"3.7. Phase 7: Post-Launch Maintenance and Evolution",id:"37-phase-7-post-launch-maintenance-and-evolution",level:3},{value:"4. Core Blockchain Components",id:"4-core-blockchain-components",level:2},{value:"4.1. PoA Consensus Module",id:"41-poa-consensus-module",level:3},{value:"4.2. HRV Token Smart Contract",id:"42-hrv-token-smart-contract",level:3},{value:"4.3. NFT Smart Contract",id:"43-nft-smart-contract",level:3},{value:"5. Supporting Tools and Utilities",id:"5-supporting-tools-and-utilities",level:2},{value:"5.1. HARVEST CLI (<code>harvest_cli.py</code>)",id:"51-harvest-cli-harvest_clipy",level:3},{value:"5.2. HARVEST Wallet (<code>harvest_wallet.py</code>)",id:"52-harvest-wallet-harvest_walletpy",level:3},{value:"5.3. HARVEST Blockchain Explorer (<code>harvest_explorer.py</code>)",id:"53-harvest-blockchain-explorer-harvest_explorerpy",level:3},{value:"6. Security Considerations",id:"6-security-considerations",level:2},{value:"7. Future Enhancements",id:"7-future-enhancements",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"harvest-blockchain-technical-documentation",children:"HARVEST Blockchain Technical Documentation"})}),"\n",(0,t.jsx)(n.h2,{id:"1-introduction",children:"1. Introduction"}),"\n",(0,t.jsx)(n.p,{children:"This document provides a comprehensive technical overview of the HARVEST blockchain, a sidechain built on the Cardano ecosystem. HARVEST is designed to offer a high-performance, scalable, and secure environment for digital assets, leveraging a Proof-of-Authority (PoA) consensus mechanism."}),"\n",(0,t.jsx)(n.h2,{id:"2-architecture-overview",children:"2. Architecture Overview"}),"\n",(0,t.jsx)(n.p,{children:"HARVEST operates as a permissioned sidechain integrated with the Cardano mainnet. Its architecture is composed of several key components working in concert to ensure efficient and secure operations."}),"\n",(0,t.jsx)(n.h3,{id:"21-core-components",children:"2.1. Core Components"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cardano Mainnet Integration"}),": Facilitates secure asset transfer between Cardano and HARVEST via Plutus scripts."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"HARVEST Sidechain Network"}),": The primary blockchain where transactions are processed and blocks are generated by authorized Node Handlers."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Node Handlers (Masters)"}),": Trusted entities responsible for block production and validation under the PoA consensus."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Chain Follower"}),": Monitors the Cardano mainnet for cross-chain transaction requests and relays them to the sidechain."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Sidechain-Specific Module"}),": Processes data from the Chain Follower, ensuring compliance with HARVEST's rules."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"22-proof-of-authority-poa-consensus",children:"2.2. Proof-of-Authority (PoA) Consensus"}),"\n",(0,t.jsx)(n.p,{children:"HARVEST employs a PoA consensus mechanism, offering:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"High Transaction Throughput"}),": Achieved through a limited, authorized set of validators."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Predictable Block Times"}),": Consistent block generation intervals."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reduced Energy Consumption"}),": No intensive computational power required, unlike PoW."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Enhanced Security"}),": Relies on the identity and reputation of Node Handlers, with mechanisms for revoking authority."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"23-node-handler-specifications",children:"2.3. Node Handler Specifications"}),"\n",(0,t.jsx)(n.p,{children:"Node Handlers are designed with minimal hardware requirements:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Hardware"}),": Modern dual-core CPU, 8 GB RAM, 250 GB SSD, stable 10 Mbps internet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Software"}),": Linux OS (Ubuntu 20.04+ recommended), HARVEST Node Software, Cardano DB Sync."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Operational"}),": High uptime, robust security practices, and identity verification."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"3-development-roadmap-and-implementation-plan",children:"3. Development Roadmap and Implementation Plan"}),"\n",(0,t.jsx)(n.p,{children:"The development of HARVEST is structured into several phases, ensuring a systematic approach from core development to deployment and ongoing maintenance."}),"\n",(0,t.jsx)(n.h3,{id:"31-phase-1-core-blockchain-development",children:"3.1. Phase 1: Core Blockchain Development"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Objectives"}),": Develop HARVEST node software, implement PoA consensus, establish secure communication, and integrate with Cardano mainnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementation Plan"}),": Includes PoA consensus module development (leader election, block creation/validation, Node Handler management), network layer implementation (P2P communication, transaction/block synchronization), Cardano mainnet bridge development (Plutus scripts, Chain Follower, Sidechain-Specific Module), and core API development."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"32-phase-2-smart-contract-development",children:"3.2. Phase 2: Smart Contract Development"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Objectives"}),": Enable smart contract functionality, implement core contracts for HRV and NFT management, and provide development tools."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementation Plan"}),": Focuses on smart contract runtime environment (language selection, VM adaptation), HRV smart contracts (token functionalities), NFT smart contracts (minting, transfer, royalties, metadata storage), and smart contract development tools."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"33-phase-3-supporting-tools-and-utilities",children:"3.3. Phase 3: Supporting Tools and Utilities"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Objectives"}),": Build user-friendly tools like a CLI, wallet application, and blockchain explorer."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementation Plan"}),": Involves CLI development (node management, transaction submission, queries), wallet application (HRV/NFT management, cross-chain transfers), blockchain explorer (transaction/block visualization), and monitoring tools."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"34-phase-4-testing-and-auditing",children:"3.4. Phase 4: Testing and Auditing"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Objectives"}),": Comprehensive testing, independent security audits, and performance optimization."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementation Plan"}),": Includes unit/integration testing, performance/stress testing, security audits, and optional bug bounty program."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"35-phase-5-documentation-and-user-guides",children:"3.5. Phase 5: Documentation and User Guides"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Objectives"}),": Create detailed technical documentation and user-friendly guides."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementation Plan"}),": Focuses on technical documentation (architecture, consensus, APIs), Node Handler guides (setup, maintenance, security), and end-user guides (wallet, explorer, NFTs)."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"36-phase-6-deployment-and-launch",children:"3.6. Phase 6: Deployment and Launch"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Objectives"}),": Deploy to production, onboard initial Node Handlers, and officially launch the network."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementation Plan"}),": Covers infrastructure setup, initial Node Handler onboarding, network genesis, and public launch."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"37-phase-7-post-launch-maintenance-and-evolution",children:"3.7. Phase 7: Post-Launch Maintenance and Evolution"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Objectives"}),": Monitor network, implement updates, and plan future enhancements."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementation Plan"}),": Involves continuous monitoring, security patches/updates, community engagement, and new feature development."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"4-core-blockchain-components",children:"4. Core Blockchain Components"}),"\n",(0,t.jsx)(n.h3,{id:"41-poa-consensus-module",children:"4.1. PoA Consensus Module"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"poa_consensus.py"})," module implements the core logic for the Proof-of-Authority consensus. Key functionalities include:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Leader Selection"}),": A round-robin mechanism ensures fair distribution of block production responsibilities among Node Handlers."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Block Creation"}),": Leaders collect transactions, create new blocks, and sign them cryptographically."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Block Validation"}),": Other Node Handlers verify the leader's signature and the validity of transactions within the block."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Node Handler Management"}),": Functions for securely adding and removing authorized Node Handlers."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"42-hrv-token-smart-contract",children:"4.2. HRV Token Smart Contract"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"hrv_token.py"})," module defines the smart contract for the HARVEST (HRV) coin. It manages the 1 billion pre-minted HRV coins and provides essential token functionalities:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Total Supply Management"}),": Tracks the total number of HRV coins in circulation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Balance Tracking"}),": Manages individual user balances."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Transfer Functionality"}),": Enables secure transfer of HRV between users."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Minting (Restricted)"}),": Allows for controlled minting of new HRV, typically restricted to the contract owner or specific authorities."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Burning"}),": Enables the permanent removal of HRV from circulation."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"43-nft-smart-contract",children:"4.3. NFT Smart Contract"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"nft_contract.py"})," module defines the smart contract for managing the 3125 NFTs on the HARVEST sidechain. It supports:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"NFT Minting"}),": Creation of new unique NFTs, with minting typically restricted to the contract owner."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"NFT Transfer"}),": Secure transfer of NFTs between users."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Ownership Tracking"}),": Records the current owner of each NFT."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Metadata Management"}),": Associates unique metadata (e.g., IPFS URIs) with each NFT."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Royalty Enforcement (Future)"}),": Placeholder for implementing mechanisms to enforce creator royalties on secondary sales."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"5-supporting-tools-and-utilities",children:"5. Supporting Tools and Utilities"}),"\n",(0,t.jsxs)(n.h3,{id:"51-harvest-cli-harvest_clipy",children:["5.1. HARVEST CLI (",(0,t.jsx)(n.code,{children:"harvest_cli.py"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"A command-line interface for interacting with the HARVEST blockchain. It provides functionalities for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Node Operations"}),": Starting, stopping, and checking the status of a HARVEST node."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Token Operations"}),": Checking HRV balances, initiating transfers, and managing minting/burning (for authorized users)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"NFT Operations"}),": Minting, transferring, querying ownership, and retrieving metadata for NFTs."]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"52-harvest-wallet-harvest_walletpy",children:["5.2. HARVEST Wallet (",(0,t.jsx)(n.code,{children:"harvest_wallet.py"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"A basic wallet application for managing HRV and NFTs. It includes features for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Balance Display"}),": Showing current HRV balance."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"NFT Collection View"}),": Displaying owned NFTs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Send/Receive"}),": Facilitating the sending and receiving of HRV and NFTs."]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"53-harvest-blockchain-explorer-harvest_explorerpy",children:["5.3. HARVEST Blockchain Explorer (",(0,t.jsx)(n.code,{children:"harvest_explorer.py"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"A web-based tool for visualizing and monitoring the HARVEST blockchain. It provides insights into:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Latest Blocks"}),": Information on recently mined blocks."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Transactions"}),": Details of individual transactions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Network Statistics"}),": Overview of total transactions and active Node Handlers."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"6-security-considerations",children:"6. Security Considerations"}),"\n",(0,t.jsx)(n.p,{children:"Security is paramount for the HARVEST blockchain. Key measures include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Code Audits"}),": Regular security audits of all core components and smart contracts."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Multi-Signature Wallets"}),": For critical operations and asset management."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Regular Updates"}),": Timely application of security patches and software updates."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Disaster Recovery"}),": Comprehensive plans to ensure network continuity."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"7-future-enhancements",children:"7. Future Enhancements"}),"\n",(0,t.jsx)(n.p,{children:"Future development will focus on:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Decentralized Governance"}),": Empowering HRV holders with greater decision-making power."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Additional Cross-Chain Bridges"}),": Expanding interoperability with other blockchain networks."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Layer 2 Scaling Solutions"}),": Exploring further scalability enhancements for specific use cases."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This documentation serves as a foundational guide for developers, Node Handlers, and users interested in the HARVEST blockchain. For more detailed information on specific components, please refer to their respective module documentation and code comments."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var s=i(6540);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);